http://releases.ubuntu.com/14.04/

search cmd
------------

grep -ir --> incase sensitive & recursive

OutPut :
ubuntu@ip-172-31-31-226:~$ grep -ir "string"
.viminfo:# Search String History (newest to oldest):
training/search1.txt:hello string hi
training/search2.txt:hello StrinG2 hi
training/tr2/search3.txt:hello STRING2 hi


process cmd
------------

ps -ef | grep apache

-e Writes information to standard output about all processes, except kernel
processes.

-f Generates a full listing.


ports cmds
-----------

netstat -a | grep LISTEN


Space cmds
----------
The “df” command displays the information of device name, total blocks, total disk space, used disk space, available disk space and mount points on a file system.

h -- human readable format
k -- kilo bytes

df -h or df -k
du -k
free -m

services cmd
-------------

service apache2 restart | status | stop | start


last modified file
------------------

ls -ltr

switch user
-----------
sudo su
pwd
exit

finding ip:
-----------
ip a

nmap 
-----
Nmap is used for exploring networks, perform security scans, network audit and finding open ports on remote machine

ubuntu@ubuntu-VirtualBox:~/shell$ nmap 10.116.54.137

install:
-------
sudo apt-get install nmap
sudo yum install nmap

download a file
----------------
curl https://www.w3schools.com/Tags/att_a_download.asp -- display the content
 
wget https://www.w3schools.com/Tags/att_a_download.asp -- download


file in a folder
----------------

find . -name  arr8.sh

change the permission
---------------------

This chmod command makes the shell script file "example1" executable for the user (owner) only:
$ chmod u+x example1.sh

this syntax makes it executable for all (everyone):
$ chmod a+x example1.sh


$ chmod 777 example1.sh
        (or)
$ chmod ugo+rwx example1.sh

$ chmod -R 777 dir


Permission to read, r, is given the numeric value of 4
Permission to write, w, is given the value 2
Permission to execute, x, is given the value 1

order - User, Group and Others



env -- gives list of ENV vars
--------------------------
$env


HISTFILE=/home/lfl/.history
PATH=/usr/local/bin:/bin:/usr/bin:/usr/X11R6/bin
SHELL=/bin/ksh
HOSTNAME=livefirelabs.com
USER=lfl
MAIL=/var/spool/mail/lfl
HOME=/home/lfl
HISTSIZE=1000


ftp
------
bash-3.2$ sftp myedla@slc07gtd
myedla@slc07gtd's password:
sftp> cd /home/
sftp> put java0.log
Uploading java0.log to /home/java0.log
Couldn't get handle: Permission denied
sftp> cd /scratch/myedla/
sftp> get java0.log
Uploading java0.log to /scratch/myedla/java0.log
java0.log                                                                                                                  100%   34KB  34.1KB/s   00:00
sftp>

archive
--------
zip -r folder1 folder1

tar -cvf tecmint-14-09-12.tar /home/tecmint/  -- tar (c -- create)

tar -xvf public_html-14-09-12.tar  -- untar (x- extract)


sleep 3600
----------
wait for 3600 secs

cat -b filename
---------------
1   This is unix file....I created it for the first time.....
2   I'm going to save this content in this file.
$

mail
-------
$mail -s "Test Message" <mailId> < demo.txt 
 
cut
-------
grep "/bin/bash" /etc/passwd | cut -d':' -f1-2,6,7 

sed
-----

Sed is a Stream Editor used for modifying the files in unix (or linux). Whenever you want to make changes to the file automatically, sed comes in handy to do this. 

Use the -n option along with the /p print flag to display only the replaced lines. Here the -n option suppresses the duplicate rows generated by the /p flag and prints the replaced lines only one time. 

sed -n "1,10p" /etc/passwd | cat -n

sed 's/unix/linux/' file.txt

cat log.txt | sed '1,3d' | more

d - delete 

ping
------
ping ip

find login info
---------------
finger - finger looks up and displays information about system users.
$finger ubuntu

who - The who command prints information about all users who are currently           logged in.

working with directory
----------------
$cd ~ -> go to home dir

$mkdir -p /tmp/amrood/test

ls
-------
$ ls -a  -> display hidden files as well

tail
-------
tail -5 /etc/passwd | tee file_passwd

head
-------
head -5 /etc/passwd | tee file_passwd

Top
-------
top command displays processor activity of your Linux box and also displays tasks managed by kernel in real-time. It’ll show processor and memory are being used and other information like running processes.

Special Vars:
-------------
$echo $$ --> writes the PID of the current shell
$echo $? --> The exit status of the last command executed.
$echo $! --> The process number of the last background command.
$echo $# --> The number of arguments supplied to a script.

Setting PATH
------------
[myedla@slc07gtd ant]$ set ANT_HOME=/usr/share/ant
[myedla@slc07gtd ant]$ echo $0
-csh
[myedla@slc07gtd ant]$ set PATH=$ANT_HOME/bin:$ANT_HOME/lib:$PATH
[myedla@slc07gtd ant]$ echo $PATH
/usr/share/ant/bin:/bin:/usr/bin:/usr/dev_infra/platform/bin:/usr/dev_infra/generic/bin:/usr/local/bin:/usr/X11R6/bin:/usr/local/ade/bin

BASH
-bash-3.2$ cd /usr/share/ant/
-bash-3.2$ ls
etc  lib
-bash-3.2$ export ANT_HOME=/usr/share/ant
-bash-3.2$ export PATH=$ANT_HOME/bin:$PATH
-bash-3.2$ echo $PATH
/usr/share/ant/bin:/usr/lib64/qt-3.3/bin:/usr/kerberos/bin:/bin:/usr/bin:/usr/dev_infra/platform/bin:/usr/dev_infra/generic/bin:/usr/local/bin:/usr/X11R6/bin:/usr/local/ade/bin
